<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
	http://www.springframework.org/schema/tx    
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd    
	http://www.springframework.org/schema/aop    
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd  
	http://cxf.apache.org/jaxws   
	http://cxf.apache.org/schemas/jaxws.xsd 
	http://www.springframework.org/schema/data/mongo
	http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd"> 
	 <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->
    <mongo:mongo id="mongo" replica-set="${mongo.hostport}">
        <!-- 一些连接属性的设置 -->    
        <mongo:options
             connections-per-host="${mongo.connectionsPerHost}"
             threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
             connect-timeout="${mongo.connectTimeout}"
             max-wait-time="${mongo.maxWaitTime}"
             auto-connect-retry="${mongo.autoConnectRetry}"
             socket-keep-alive="${mongo.socketKeepAlive}"
             socket-timeout="${mongo.socketTimeout}"
             slave-ok="${mongo.slaveOk}"
             write-number="1"
             write-timeout="0"
             write-fsync="true"/>        
    </mongo:mongo>
	<mongo:db-factory dbname="database" mongo-ref="mongo" />
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo" />
        <constructor-arg name="databaseName" value="test" />
    </bean>
<!-- 引入属性文件 -->  
<!--   	<context:property-placeholder location="classpath:properties/jdbc.properties" /> -->
<!-- <bean id="masterDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="default" autowire="default">
		<property name="driverClass" value="${jdbc.driverClassName0}" />
		<property name="jdbcUrl" value="${jdbc.url0}" />
		<property name="user" value="${jdbc.username0}" />
		<property name="password" value="${jdbc.password0}" />
		<property name="minPoolSize" value="2" />
		<property name="maxPoolSize" value="200" />
		<property name="maxIdleTime" value="600" />
		<property name="acquireIncrement" value="2" />
		<property name="maxStatements" value="0" />
		<property name="initialPoolSize" value="3" />
		<property name="idleConnectionTestPeriod" value="600" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="testConnectionOnCheckin" value="true" />
	</bean> -->	
	<!-- <bean id="slaveDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="default" autowire="default">
		<property name="driverClass" value="${jdbc.driverClassName1}" />
		<property name="jdbcUrl" value="${jdbc.url1}" />
		<property name="user" value="${jdbc.username1}" />
		<property name="password" value="${jdbc.password1}" />
		<property name="minPoolSize" value="2" />
		<property name="maxPoolSize" value="200" />
		<property name="maxIdleTime" value="600" />
		<property name="acquireIncrement" value="2" />
		<property name="maxStatements" value="0" />
		<property name="initialPoolSize" value="3" />
		<property name="idleConnectionTestPeriod" value="600" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="testConnectionOnCheckin" value="true" />
	</bean> -->
	<!-- <bean id="dataSource" class="com.travel.common.datesource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="slave" value-ref="masterDataSource" /> 
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean> -->
	<!-- 切换数据源 -->  
<!--     <bean id="dataSourceAdvice" class="com.travel.common.datesource.DataSourceAdvice" /> -->
    <!-- <aop:config>  
        <aop:advisor  
            pointcut="execution(* *..*Service.*(..))"  
            advice-ref="dataSourceAdvice" />  
    </aop:config> -->  
    <!-- mybatis 配置 --> 
   <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource" />
      
        <property name="configLocation" value="classpath:mybatis/myBatis-Configuration.cfg.xml"/>
       <property name="mapperLocations">
       		<list>
		       	<value>classpath:com/travel/**/mapper/*.xml</value>
	       	</list>
       </property>
       <property name="typeAliasesPackage" value="com.travel.mybatis.entity"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.travel.mybatis.dao"/>
    </bean>
     --> 
     
     <!-- mongo 配置 -->
     <!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->  
    <mongo:mapping-converter base-package="com.travel.mongo.model" />  
  
    <!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->  
    <mongo:repositories base-package="com.travel.service.impl" />  
	<!-- 使用spring jdbc 事务管理。 -->
<!-- 	<bean id="transactionManager" 	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 	</bean> -->
<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="save*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="insert*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="create*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="update*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="merge*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="modify*" read-only="false" rollback-for="Exception" propagation="REQUIRED" />				 -->
<!-- 			<tx:method name="delete*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="clear*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="close*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="do*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="add*" read-only="false" rollback-for="Exception" propagation="REQUIRED" />   -->
<!--             <tx:method name="edit*" read-only="false" rollback-for="Exception" propagation="REQUIRED" />   -->
<!--             <tx:method name="remove*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="batch*" read-only="false" rollback-for="Exception" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="*" read-only="true" propagation="REQUIRED" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->
	<aop:config proxy-target-class="true">
		<!-- 只对业务逻辑层实施事务 -->
<!-- 		<aop:pointcut id="serviceCommonPointcut" expression="execution(* com.travel.service.impl.*.*(..))" /> -->
<!-- 		<aop:pointcut id="serviceModulesPointcut" expression="execution(* com.drolay.partner.*.service.impl.*.*(..))" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceCommonPointcut" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceModulesPointcut" /> -->
	</aop:config>
</beans>